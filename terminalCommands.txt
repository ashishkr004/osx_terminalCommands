// Mac OS X bits

	#python{
		python
		control + z
	}

	# Django{
		sudo easy_install pip		//first install pip(python packages)
		sudo pip install Django		//install Django

		pip list		//list of installed python packages
		sudo pip install module_name 		//to install python module

		django-admin.py startpurject projectname		//creating django project
		python manage.py runserver		//first go to project folder then run server
		http://127.0.0.1:8000		//localhost address

		//to check which version of Django is installed
		django-admin.py --version 		//first method
		
		python 		//second method
		>>> import django 		
		>>> print(django.get_version())

		sudo pip install djangorestframework		//to install django rest framework

		//to install mysql-python(mysqldb)
		export PATH=$PATH:/usr/local/mysql/bin
		sudo easy_install MySQL-python

		python manage.py migrate		//migrate setting

		sudo python manage.py runserver 127.0.0.1:80 		//to set default port to 80
	}

	#mysql-python{
		mysql -u root -p 		//to open mysql cell
		ALTER USER 'root'@'localhost' IDENTIFIED BY 'new_password';	//to change mysql password for the first time
		UPDATE mysql.user SET Password='prachi' WHERE User='root';		//to update mysql password
		FLUSH PRIVILEGES;
		\q 		//to exit mysql cell

		sudo launchctl load -F /Library/LaunchDaemons/com.oracle.oss.mysql.mysqld.plist	  //to start mysql service 
		sudo launchctl unload -F /Library/LaunchDaemons/com.oracle.oss.mysql.mysqld.plist  //to stop mysql service

		CREATE DATABASE database_name; 		//to create datebase

		python manage.py createsuperuser		//to create superuser
	}

	#install Flask{
		sudo pip install flask		//first install pip if not installed then install flask
	}

	#locally installed Python modules{
		pip freeze
	}

	#run and compile Python{
		Python filename.py
	}
	
	#Java version{
		javac -version		//get java version which is intalled
	}

	#run and compile R{
		Rscript filename.r
	}

// SSH commands
	ssh username@serverAddress		//to connect server through ssh
	sudo nano /etc/squid/squid.conf			//to change port address
	sudo service squid restart 			//restart the server services

	scp your_username@remotehost.edu:foobar.txt /local/dir		//download files or folder from server through ssh
	scp baadalvm@10.17.50.54:scripts/autologin.py Desktop
	
	nano filename			//edit file in terminal

//
	ping -c 4 www.google.com


/Applications/MAMP/Library/bin/mysql --version 		//To check MySQL version of MAMP


	#git{
		git --version
	}

	# brew{
		How to install Homebrew on OS X?

			ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
			
		* sublime text
			brew cask install sublime-text
			
		* java
			 brew cask install java
			 
		* google chrome
			brew cask install google-chrome
			
		* firefox
			brew cask install firefox
		
		* postgresql
			brew install postgresql
			
		* intellij-ide
			brew cask install intellij-idea-ce
			
		* postman
			brew cask install postman
			
		* git
			brew install git
			
		* mysql
			brew install mysql
			
		* maven
			brew install maven
			
		* springboot
			https://repo.spring.io/release/org/springframework/boot/spring-boot-cli/2.0.2.RELEASE/spring-boot-cli-2.0.2.RELEASE-bin.zip

			brew tap pivotal/tap
			brew install springboot

	}
	
	postgresql{
	
		* important url
			https://reviewdb.io/posts/1505070389284/setting-up-postgresql-in-macos
			
		* To start manually
			pg_ctl -D /usr/local/var/postgres start
			
		* To stop manually
			pg_ctl -D /usr/local/var/postgres stop
			
		* start PostgreSQL server now and relaunch at login:
			brew services start postgresql
			
		* And stop PostgreSQL:
			brew services stop postgresql
		
		* Login to psql utility using the following command
			psql postgres
			
		* list all schema
			\dn
			
		* list all table in database
			\dt
			
		* list all table in all schema in database
			\dt *.*
			
		* list all table in particular schema in particular database
			\dt schema.*
	}

pid kill command(when some process id is using some port)
	* sudo kill -9 3711




spring boot{
	maven command:
		mvn spring-boot:run
	maven build command:
		mvn clean install
}

vim{
	* save a file and exit
		Press the ESC key
		Type :wq
		Press the ENTER key
}
